#!/usr/bin/env node
const ToSSH = require('to-ssh');
const client = require('scp2');
const dictionnary = new Map();

function getConnection(server) {
  let promisedSsh = dictionnary.get(server);

  if (promisedSsh === undefined) {
    promisedSsh = new Promise((resolve, reject) => {
      const ssh = new ToSSH({
        host: server.host,
        username: server.username,
        password: server.password,
      });

      ssh.connect((err) => {
        if (err)
          reject(err);

        resolve(ssh);
      });
    });

    dictionnary.set(server, promisedSsh);
  }

  return promisedSsh;
}

module.exports.delete = (file, server) => {
  const promisedSsh = getConnection(server);
  const remotePath = `${server.path}/${file.rel}`;
  const cmd = `rm -Rf ${remotePath}`;

  return promisedSsh.then((ssh) => {
    return new Promise((resolve, reject) => {
      ssh.addTask(cmd, function(stdout, stderr) {
        if (stderr)
          reject(new Error(stderr));

        resolve(file);
      });
    });
  });
}

module.exports.send = (file, server) => {
  const target = `${server.username}:${server.password}@${server.host}:${server.path}/${file.rel}`;

  return new Promise((resolve, reject) => {
    client.scp(file.abs, target, (err) => {
      if (err)
        reject(err);

      resolve(file);
    });
  });
}
